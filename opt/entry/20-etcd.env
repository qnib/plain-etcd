#!/bin/bash
set -x

export CLIENT_URLS="http://0.0.0.0:2379"
export PEER_URLS="http://0.0.0.0:2380"
export MY_IP=$(go-fisherman --print-container-ip)

: "${SERVICE_NAME:=peer}"
ETCD_MIN_TASKS=${ETCD_MIN_TASKS:-1}
ETCD_OPTS="--name $(hostname) -data-dir=${ETCD_DATA_DIR} -listen-peer-urls=${PEER_URLS} -listen-client-urls=${CLIENT_URLS}"
ETCD_OPTS="${ETCD_OPTS} --advertise-client-urls http://$(hostname):2379"

ETCD_MEMBERS=0
ping -c1 ${SERVICE_NAME} >/dev/null
if [[ $? -eq 0 ]];then
  ETCD_MEMBERS=$(etcdctl --endpoints http://tasks.${SWARM_SERVICE_NAME}:2379 member list |grep -c isLeader)
fi
echo "> Found ${ETCD_MEMBERS} in cluster ${SERVICE_NAME}:2379"
### Only when cluster is not already present
if [[ ${ETCD_MEMBERS} -lt ${ETCD_MIN_TASKS} ]];then
  export ETCD_INITIAL_CLUSTER_STATE=new
  export ETCD_INITIAL_CLUSTER="$(go-fisherman --template=etcd ${SWARM_SERVICE_NAME:-etcd})"
else
  echo "> Add myself to the cluster"
  etcdctl --endpoints http://tasks.${SWARM_SERVICE_NAME}:2379 member add $(hostname) http://${MY_IP}:2380
  export ETCD_INITIAL_CLUSTER_STATE=existing
  export ETCD_INITIAL_CLUSTER="$(go-fisherman --template=etcd ${SWARM_SERVICE_NAME:-etcd}) $(hostname)=http://${MY_IP}:2380"
fi
if [[ $? -ne 0 ]];then
    echo "> go-fisherman failed!"
    exit 1
fi
ETCD_OPTS="${ETCD_OPTS} --initial-cluster-token ${ETCD_CLUSTER_TOKEN} --initial-advertise-peer-urls http://${MY_IP}:2380"
if [[ $? -ne 0 ]];then
    echo "> go-fisherman failed!"
    exit 1
fi
export ETCD_OPTS=${ETCD_OPTS}

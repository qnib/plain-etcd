#!/bin/bash
set -x

: "${SERVICE_NAME:=etcd}"
: "${SWARM_TASK_SLOT:=-1}"
: "${ETCD_PEER_PORT:=2380}"

if [[ "$(echo ${SERVICE_NAME}| awk -F"_" '{print NF-1}')" -ne 0 ]];then
  SERVICE_NAME=$(echo ${SERVICE_NAME} |awk -F_ '{print $NF}')
fi

export CLIENT_URLS="http://0.0.0.0:2379"
export PEER_URLS="http://0.0.0.0:${ETCD_PEER_PORT}"
export MY_IP=$(go-fisherman --print-container-ip)

ETCD_MIN_TASKS=${ETCD_MIN_TASKS:-1}
ETCD_OPTS="--name $(hostname) -data-dir=${ETCD_DATA_DIR} -listen-peer-urls=${PEER_URLS} -listen-client-urls=${CLIENT_URLS}"
ETCD_OPTS="${ETCD_OPTS} --advertise-client-urls http://$(hostname):2379"

ETCD_MEMBERS=0
ETCD_HEALTHY_MEMBERS=$(dig +short tasks.peer |wc -l)
if [[ ${ETCD_HEALTHY_MEMBERS} -gt 0 ]];then
  echo "> ETCD_HEALTHY_MEMBERS: ${ETCD_HEALTHY_MEMBERS} acording to DNS"
  ETCD_MEMBERS=$(etcdctl --endpoints http://tasks.${SERVICE_NAME}:2379 member list |grep -c isLeader)
  echo "> Found ${ETCD_MEMBERS} in cluster tasks.${SERVICE_NAME}:2379 according to etcdctl"
  export ETCD_INITIAL_CLUSTER="$(go-fisherman --template=etcd tasks.${SERVICE_NAME})"
else
  echo ">> no DNS entry yet: this container is the first tasks"
  export ETCD_INITIAL_CLUSTER_STATE=new
  export ETCD_INITIAL_CLUSTER="http://$(go-fisherman --print-container-ip):${ETCD_PEER_PORT}"
fi

### Only when cluster is not already present
if [[ ${ETCD_MEMBERS} -ge ${ETCD_MIN_TASKS} ]];then
  echo "> Add myself to the cluster"
  etcdctl --endpoints http://tasks.${SERVICE_NAME}:2379 member add $(hostname) http://${MY_IP}:${ETCD_PEER_PORT}
  export ETCD_INITIAL_CLUSTER_STATE=existing
  export ETCD_INITIAL_CLUSTER="$(go-fisherman --template=etcd tasks.${SERVICE_NAME}) $(hostname)=http://${MY_IP}:${ETCD_PEER_PORT}"
fi
if [[ $? -ne 0 ]];then
    echo "> go-fisherman failed!"
    exit 1
fi
ETCD_OPTS="${ETCD_OPTS} --debug --initial-cluster-token ${ETCD_CLUSTER_TOKEN}"
ETCD_OPTS="${ETCD_OPTS} --advertise-client-urls=http://${MY_IP}:2379,http://${MY_IP}:4001"
#ETCD_OPTS="${ETCD_OPTS} --listen-client-urls=http://127.0.0.1:2379,http://127.0.0.1:4001"
ETCD_OPTS="${ETCD_OPTS} --listen-client-urls=https://127.0.0.1:2379"
ETCD_OPTS="${ETCD_OPTS} --initial-advertise-peer-urls http://${MY_IP}:2380"
ETCD_OPTS="${ETCD_OPTS} --listen-peer-urls http://127.0.0.1:2380"
if [[ $? -ne 0 ]];then
    echo "> go-fisherman failed!"
    exit 1
fi
export ETCD_OPTS=${ETCD_OPTS}
find ${ETCD_DATA_DIR}

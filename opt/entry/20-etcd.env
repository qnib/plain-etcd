#!/bin/bash
set -x

: "${SERVICE_NAME:=etcd}"
: "${SWARM_TASK_SLOT:=0}"
: "${ETCD_PEER_PORT:=2380}"
: "${ETCD_CLUSTER_TOKEN:=etcd-1}"

if [[ "$(echo ${SERVICE_NAME}| awk -F"_" '{print NF-1}')" -ne 0 ]];then
  SERVICE_NAME=$(echo ${SERVICE_NAME} |awk -F_ '{print $NF}')
fi

ETCD_OPTS="--name $(hostname)"
#export CLIENT_URLS="http://0.0.0.0:2379"
#export PEER_URLS="http://0.0.0.0:${ETCD_PEER_PORT}"
export MY_IP=$(go-fisherman --print-container-ip)

ETCD_MIN_TASKS=${ETCD_MIN_TASKS:-1}

ETCD_MEMBERS=0
ETCD_HEALTHY_MEMBERS=$(dig +short tasks.peer |wc -l)
if [[ ${ETCD_HEALTHY_MEMBERS} -gt 0 ]];then
  echo "> ETCD_HEALTHY_MEMBERS: ${ETCD_HEALTHY_MEMBERS} acording to DNS"
  ETCD_MEMBERS=$(etcdctl --endpoints http://tasks.${SERVICE_NAME}:2379 member list |grep -c isLeader)
  echo "> Found ${ETCD_MEMBERS} in cluster tasks.${SERVICE_NAME}:2379 according to etcdctl"
  echo ">> add initial cluster=$(go-fisherman -t etcd ${SERVICE_NAME})"
  export ETCD_INITIAL_CLUSTER_STATE=existing
  ETCD_OPTS="${ETCD_OPTS} --initial-cluster=$(hostname)=http://${MY_IP}:${ETCD_PEER_PORT},$(go-fisherman -t etcd ${SERVICE_NAME})"
else
  echo ">> no DNS entry yet"
  if [[ ${SWARM_TASK_SLOT} -eq 1 ]];then
    echo ">> this container is the first tasks"
    export ETCD_INITIAL_CLUSTER_STATE=new
    ETCD_OPTS="${ETCD_OPTS} --initial-cluster=$(hostname)=http://${MY_IP}:2380"
    ETCD_OPTS="${ETCD_OPTS} --initial-advertise-peer-urls http://${MY_IP}:2380"
  else
    echo ">> this container is NOT first tasks, drop out to reschedule tasks until initial task slot is online"
    exit 1
  fi
fi

if [[ $? -ne 0 ]];then
    echo "> go-fisherman failed!"
    exit 1
fi
#ETCD_OPTS="${ETCD_OPTS} --debug --initial-cluster-token ${ETCD_CLUSTER_TOKEN}"
ETCD_OPTS="${ETCD_OPTS} --advertise-client-urls http://${MY_IP}:2379"
ETCD_OPTS="${ETCD_OPTS} --listen-client-urls=http://127.0.0.1:2370,http://${MY_IP}:2379,http://${MY_IP}:4001"
ETCD_OPTS="${ETCD_OPTS} --listen-peer-urls=http://127.0.0.1:2380,http://${MY_IP}:2380"

if [[ $? -ne 0 ]];then
    echo "> go-fisherman failed!"
    exit 1
fi
export ETCD_OPTS=${ETCD_OPTS}
